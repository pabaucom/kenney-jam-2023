go.property("spawn_radius", 2500)
go.property("ghost_count", 13)
go.property("safe_radius", 700)

function spawn_ghost(self)
	local player_pos = go.get_world_position("player")
	local pos = vmath.vector3(0, 0, 0.6)

	repeat
		pos.x = player_pos.x + math.random(self.spawn_radius) - self.spawn_radius / 2
		pos.y = player_pos.y + math.random(self.spawn_radius) - self.spawn_radius / 2
	until vmath.length(player_pos - pos) >= self.safe_radius

	local id = factory.create("#ghostfactory", pos)
	msg.post(id, "set_parent", { parent_id = go.get_id("objects") })
	self.enemies[id] = id
end

function init(self)
	self.enemies = {}
end

function update(self, dt)
	local i = 1
	for id, _ in pairs(self.enemies) do
		local pos = go.get_position(id)
		msg.post("@render:", "draw_text",
			{ position = vmath.vector3(20, 20 + i * 20, 0), text = ("GHOST: %dx%d"):format(pos.x, pos.y) })
		i = i + 1
	end
end

local function delete_ghost(self, id)
	go.delete(id)
	self.enemies[id] = nil
end

function on_message(self, message_id, message, sender)
	if message_id == hash("delete_ghost") then
		delete_ghost(self, message.id)
		spawn_ghost(self)
	elseif message_id == hash("kill_ghost") then
		sound.play("#ghost_kill")
		delete_ghost(self, message.id)
		spawn_ghost(self)
	elseif message_id == hash("hit_ghost") then
		delete_ghost(self, message.id)
		spawn_ghost(self)
	elseif message_id == hash("spawn_ghosts") then
		for i = 1, self.ghost_count do
			spawn_ghost(self)
		end
	elseif message_id == hash("clear_ghosts") then
		for id, _ in pairs(self.enemies) do
			delete_ghost(self, id)
		end
	end
end
